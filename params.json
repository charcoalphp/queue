{
  "name": "Charcoal-queue",
  "tagline": "Queue, Queue Items and Queueable objects, for Charcoal",
  "body": "Charcoal Queue\r\n==============\r\n\r\nQueue Managers, Queue Items and Queueable objects (through Interface & Trait) for Charcoal.\r\n\r\n## How to install\r\n\r\n```\r\ncomposer require locomotivemtl/charcoal-queue`\r\n```\r\n\r\n## Dependencies\r\n\r\n- `locomotivemtl/charcoal-core` for the `CollectionLoader`\r\n\r\n## Queueing System\r\n\r\nQueue managers loop queue items. Queue items represent actions to be performed (as defined by the `process()` method).\r\n\r\n## Queue Manager\r\n\r\nThe queue manager is available as an abstract class: `AbstractQueueManager`.\r\nThis class implements the `QueueManagerInterface`.\r\n\r\nThe queue can be identified with the `queue_id`. It can be set with `setQueueId()`.\r\n\r\nThe queue can be processed with `processQueue()`.\r\nIf for any reason the items need to be loaded, it can be done with `loadQueueItems()`.\r\n\r\nThere are 4 callbacks that can be defined:\r\n\r\n- `setProcessedCallback()`\r\n- `setItemCallback()`\r\n- `setItemSuccessCallbak()`\r\n- `setItemFailureCallback()`\r\n\r\nThere are only 1 abstract method:\r\n\r\n- `queueItemProto()` which must returns a `QueueItemInterface` instance\r\n\r\n## Queue Items\r\n\r\nQueue Items should implement the `QueueItemInterface`. This can be helped via the `QueueItemTrait`.\r\n\r\nQueue items can be identified with a `queue_id`. (The same `queue_id` used by the queue manager).\r\n\r\nItems can be processed with `process($callback, $successCallback, $failureCallback)`.\r\n\r\nThe queue item properties are:\r\n\r\n- `queue_id`\r\n- `queue_item_data`\r\n- `queued_date`\r\n- `processing_date`\r\n- `processed_date`\r\n- `processed`\r\n\r\n## Queuable Objects\r\n\r\nThe `QueueableInterface` defines objects that can be queued. This interface is really simple and only provides:\r\n\r\n- `setQueueId()` which can be inherited from `QueueableTrait`\r\n- `queueId()` (`queue_id` getter) which can be inherited from `QueueableTrait`\r\n- `queue($ts = null)` which is abstract and must be written inside class which implement the queueable interface\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}